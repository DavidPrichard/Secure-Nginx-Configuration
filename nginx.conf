
user             nginx;
worker_processes auto;
pid              /run/nginx.pid;

events {
    worker_connections 2048;
}

http {

  # Basic Settings
    sendfile              on;
    tcp_nopush            on;
    tcp_nodelay           on;
    client_body_timeout   12;
    client_header_timeout 12;
    keepalive_timeout     15;
    send_timeout          10;
    default_type          application/octet-stream;
    include               mime.types;

 # Logging Settings
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log off;
    error_log  /var/log/nginx/error.log warn;

	# Gzip Settings
    gzip            on;
    gzip_static     on;
    gzip_min_length 1100;
    gzip_proxied    any;
    gzip_types
      text/plain
      text/css
      text/xml
      image/svg+xml
      application/json
      application/javascript
      application/xml
      application/atom+xml
      application/rss+xml
      application/x-font-opentype
      application/x-font-ttf;

  # Error Pages
    error_page 404             /404.html;
    error_page 500 502 503 504 /50x.html;
    server_tokens off;

  # SSL Configuration
    ssl_certificate      "/etc/letsencrypt/live/example.com/fullchain.pem";
    ssl_certificate_key	 "/etc/letsencrypt/live/example.com/privkey.pem";
    ssl_dhparam          "/etc/ssl/certs/dhparam.pem";

    ssl_session_cache    shared:SSL:10m;
    ssl_session_timeout	 30m;
    ssl_session_tickets	 off;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
    ssl_ecdh_curve x25519:secp384r1;

    ssl_stapling            on;
    ssl_stapling_verify     on;
    ssl_trusted_certificate "/etc/letsencrypt/live/example.com/chain.pem";
    resolver                8.8.8.8 8.8.4.4 valid=300s; # Google's DNS
    resolver_timeout        10s;

  # Redirects HTTP requests to the HTTPS server
    server {
      listen       [::]:80 ipv6only=off;
      server_name  example.com;
      return       301 https://$host$request_uri;
    }

  # A basic HTTPS server w/ a location block for static content.
    server {
      listen       [::]:443 ipv6only=off ssl http2;
      server_name  example.com;
      root         /srv/example.com/;

      add_header X-Content-Type-Options nosniff always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Referrer-Policy strict-origin-when-cross-origin always;
      add_header Content-Security-Policy "default-src 'self'; frame-ancestors 'none';" always;
      #add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
      #add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

      location / {
        limit_except GET HEAD { deny all; }

        expires 30d;

        try_files $uri $uri/ $uri.html =404;
      }
    }

}
